{"version":3,"sources":["redux/reducers/index.js","redux/actions/index.js","redux/generators/index.js","store.js","components/Header.js","components/MessageInput.js","components/EditModal.js","components/MessageList.js","pages/Chat.js","pages/Login.js","pages/EditMessage.js","components/UserEditOrAdd.js","components/UsersList.js","pages/AdminPage.js","App.js","index.js"],"names":["messages","state","action","type","payload","editMessage","isLoading","error","console","log","currentUser","map","m","id","filter","isLike","users","u","userId","getMessages","addMessage","ms","body","history","text","toggleEditWindow","apiError","getUsers","adminId","loginUser","deleteMessage","setLike","addUser","removeUser","editUser","fetchUserAsync","fetchMessagesAsync","fetchMessageEditAsync","addMessageAsync","deleteMessageAsync","setLikeAsync","getUsersAsync","createUserAsync","removeUserAsync","takeEvery","put","call","axios","post","JSON","stringify","userName","password","headers","data","get","push","delete","sagaMiddleware","createSagaMiddleware","composedEnhancers","composeWithDevTools","applyMiddleware","store","createStore","rootReducer","messagesLength","avatar","isAdmin","isLoggedIn","run","IconsStyle","marginLeft","lastActivityStyle","width","textAlign","linkStyle","color","margin","mapDispatchToProps","dropUserProps","connect","props","numberOfMessages","length","participants","Array","from","Set","item","lastMessageIn","temp","i","Date","parse","createdAt","latestFinder","AppBar","position","Toolbar","Typography","Badge","badgeContent","style","align","variant","to","onClick","window","location","reload","moment","calendar","InputStyle","display","alignItems","justifyContent","marginTop","marginBottom","InputFieldStyle","SendButton","addMessageHandler","currentPropsUser","isEditMode","messageToEdit","editMessageHandler","useState","message","setMessage","fullMessageObject","toISOString","newMessage","replace","c","r","Math","random","toString","TextField","name","label","helperText","value","onChange","event","target","Button","propsEditMessage","closeModal","setValue","Modal","open","onClose","background","padding","border","borderRadius","multiline","CardsStyle","rightForCurrentUser","userAvatarAndNameStyle","AvatarStyle","marginRight","CardFooter","CardFotterChildStyle","flex","toggleEdit","deleteMessageHandler","msId","likeMessageHandler","hasEditWindow","Boolean","sortedMessages","sort","a","b","Container","className","isCurrentUser","divForCard","Card","CardContent","Avatar","src","gutterBottom","component","user","IconButton","format","ContainerStyle","maxHeight","inputMessageStyle","boxShadow","Chat","messageToEditIndex","receiveMessage","bind","likeMessage","editModeHander","this","setState","newArr","isLiked","tempArr","array","removeFromArr","getMessagesHandler","Component","ownProps","containerStyle","fieldsStyle","useHistory","showPassword","setUser","setIsLoading","useEffect","handleChange","prop","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","aria-label","onMouseDown","preventDefault","dispatch","modalStyles","textDivStyle","height","buttonStyle","match","params","find","rows","EditOrAddUser","tableStyles","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","getUsersProps","editUserProps","createUserProps","deleteUserProps","title","icons","columns","field","editable","isEditHidden","rowData","isDeleteHidden","onRowUpdate","newData","Promise","resolve","onRowAdd","onRowDelete","oldData","App","path","EditMessagePage","LoginPage","UserEditOrAdd","AdminPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a219bc9.chunk.js","sourcesContent":["const messages = (state, action) => {\r\n  switch (action.type) {\r\n    // case 'GET_MESSAGES':\r\n    //   return {\r\n    //     ...state,\r\n    //     messages: action.payload\r\n    //   }\r\n    case 'ADD_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload]\r\n      }\r\n    // case 'EDIT_MESSAGE':\r\n    //   return {\r\n    //     ...state,\r\n    //     messages: state.messages.map(m =>\r\n    //       m.id === action.payload.id ?\r\n    //         action.payload : m)\r\n    //   }\r\n    // case 'DELETE_MESSAGE':\r\n    //   return {\r\n    //     ...state,\r\n    //     messages: state.messages.filter(m => m.id !== action.payload)\r\n    //   }\r\n\r\n    case 'TOGGLE_EDIT':\r\n      return {\r\n        ...state,\r\n        editMessage: action.payload\r\n      }\r\n\r\n    case 'IN_PROGRESS':\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      }\r\n\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n\r\n    case 'FILL_USER':\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      }\r\n\r\n    case 'DROP_USER':\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      }\r\n\r\n    case 'FILL_MESSAGES':\r\n      return {\r\n        ...state,\r\n        messages: action.payload\r\n      }\r\n\r\n    case 'SUCCESS_MESSAGE_EDIT':\r\n      return{\r\n        ...state,\r\n        messages: state.messages.map(m =>\r\n            m.id === action.payload.id ?\r\n                action.payload : m)\r\n      }\r\n\r\n    case 'STORE_ADD_MESSAGE':\r\n      return{\r\n        ...state,\r\n        messages: [...state.messages, action.payload]\r\n      }\r\n\r\n    case 'SUCCESS_DELETE_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(m => m.id !== action.payload)\r\n      }\r\n\r\n    case 'SUCCESS_SET_LIKE':\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(m => m.id === action.payload ? {...m, isLike: !m.isLike} : m)\r\n      }\r\n\r\n    case 'SUCCESS_USERS_GET':\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      }\r\n\r\n    case 'SUCCESS_USER_CREATING':\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload]\r\n      }\r\n\r\n    case 'SUCCESS_USER_DELETED':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(u => u.userId !== action.payload)\r\n      }\r\n\r\n    case 'SUCCESS_USER_EDITING':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => u.userId === action.payload.userId ? action.payload : u)\r\n      }\r\n\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default messages;\r\n","import Messages from \"../../data/Messages\";\r\n\r\nexport const getMessages = (userId) => ({\r\n  type: 'GET_MESSAGES',\r\n  payload: userId\r\n})\r\n\r\nexport const deleteMessage = msId => ({\r\n  type: 'DELETE_MESSAGE',\r\n  payload: msId\r\n})\r\n\r\nexport const setLike = msId => ({\r\n  type: 'SET_LIKE',\r\n  payload: msId\r\n})\r\n\r\nexport const addMessage = ms => ({\r\n  type: 'ADD_MESSAGE',\r\n  payload: ms\r\n})\r\n\r\nexport const editMessage = (ms, body, history) => ({\r\n  type: 'EDIT_MESSAGE',\r\n  payload: {ms: {...ms, text: body}, history: history}\r\n})\r\n\r\nexport const toggleEditWindow = ms => ({\r\n  type: 'TOGGLE_EDIT',\r\n  payload: ms\r\n})\r\n\r\nexport const loginUser = (name, password) => ({\r\n  type: \"LOGIN_USER\",\r\n  payload: {userName: name, password: password}\r\n})\r\n\r\nexport const success = () => ({\r\n  type: \"SUCCESS\"\r\n})\r\n\r\nexport const inProgress = () => ({\r\n  type: \"IN_PROGRESS\"\r\n})\r\n\r\nexport const apiError = (error) => ({\r\n  type: \"ERROR\",\r\n  payload: error\r\n})\r\n\r\nexport const dropUser = () => ({\r\n  type: \"DROP_USER\",\r\n  payload: null\r\n})\r\n\r\nexport const getUsers = adminId => ({\r\n  type: 'GET_USERS',\r\n  payload: adminId\r\n})\r\n\r\nexport const editUser = ({userName, isAdmin, password, avatar, userId}) => ({\r\n  type: 'EDIT_USER',\r\n  payload: {userName, isAdmin, password, avatar, userId}\r\n})\r\n\r\nexport const deleteUser = ({userId}) => ({\r\n  type: 'DELETE_USER',\r\n  payload: userId\r\n})\r\n\r\nexport const createUser = ({userName, isAdmin, password, avatar, userId}) => ({\r\n  type: 'CREATE_USER',\r\n  payload: {userName, isAdmin, password, avatar, userId}\r\n})\r\n","import {all, call, put, takeEvery} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {apiError, fillUser, inProgress, success} from '../actions/index'\r\n\r\nexport function* loginUser() {\r\n    yield takeEvery('LOGIN_USER', fetchUserAsync);\r\n}\r\n\r\nexport function* getMessages() {\r\n    yield takeEvery('GET_MESSAGES', fetchMessagesAsync);\r\n}\r\n\r\nexport function* editMessage() {\r\n    yield takeEvery('EDIT_MESSAGE', fetchMessageEditAsync);\r\n}\r\n\r\nexport function* addMessage() {\r\n    yield takeEvery('ADD_MESSAGE', addMessageAsync);\r\n}\r\n\r\nexport function* deleteMessage() {\r\n    yield takeEvery('DELETE_MESSAGE', deleteMessageAsync);\r\n}\r\n\r\nexport function* setLike() {\r\n    yield takeEvery('SET_LIKE', setLikeAsync);\r\n}\r\n\r\nexport function* getUsers() {\r\n    yield takeEvery('GET_USERS', getUsersAsync);\r\n}\r\n\r\nexport function* addUser() {\r\n    yield takeEvery('CREATE_USER', createUserAsync);\r\n}\r\n\r\nexport function* removeUser() {\r\n    yield takeEvery('DELETE_USER', removeUserAsync);\r\n}\r\n\r\nexport function* editUser() {\r\n    yield takeEvery('EDIT_USER', createUserAsync);\r\n}\r\n\r\nfunction* fetchUserAsync(action) {\r\n    try {\r\n        yield put(inProgress());\r\n        const data = yield call(axios.post, 'http://localhost:8181/login', JSON.stringify({userName: action.payload.userName, password: action.payload.password}), {\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n\r\n        yield put(success());\r\n        yield put({type:\"FILL_USER\", payload: data.data})\r\n\r\n    } catch (error) {\r\n        yield put(apiError(error))\r\n    }\r\n}\r\n\r\nfunction* fetchMessagesAsync(action) {\r\n    try{\r\n        yield put(inProgress());\r\n        const data = yield call(axios.get, 'http://localhost:8181/messages/' + action.payload );\r\n\r\n        yield put(success());\r\n        yield put({type: 'FILL_MESSAGES', payload: data.data})\r\n    } catch (error) {\r\n        yield put(apiError(error))\r\n    }\r\n}\r\n\r\nfunction* fetchMessageEditAsync(action) {\r\n    try {\r\n        yield put(inProgress());\r\n        const data = yield call(axios.post, 'http://localhost:8181/message/edit', JSON.stringify(action.payload.ms), {\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n        yield put(success());\r\n        yield put ({type: 'SUCCESS_MESSAGE_EDIT', payload: data.data})\r\n        action.payload.history.push('/chat');\r\n    } catch (error) {\r\n        yield put(apiError(error))\r\n    }\r\n}\r\n\r\nfunction* addMessageAsync (action) {\r\n    try {\r\n        yield put(inProgress());\r\n        const data = yield call(axios.post, 'http://localhost:8181/message/edit', JSON.stringify(action.payload), {\r\n            headers: {'Content-Type':'application/json'}\r\n        });\r\n        yield put(success());\r\n        yield put({type: 'STORE_ADD_MESSAGE', payload: data.data});\r\n    } catch(error) {\r\n        yield put(apiError(error))\r\n    }\r\n}\r\n\r\nfunction* deleteMessageAsync(action) {\r\n    try {\r\n        yield put(inProgress());\r\n        const data = yield call(axios.delete, 'http://localhost:8181/message/delete/' + action.payload );\r\n        yield put(success());\r\n        yield put({type: \"SUCCESS_DELETE_MESSAGE\", payload: action.payload});\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\nfunction* setLikeAsync(action) {\r\n    try {\r\n        console.log(\"Generator started: \" + action.payload);\r\n        yield put(inProgress());\r\n        const data = yield call(axios.put, 'http://localhost:8181/message/like/' + action.payload );\r\n        yield put(success());\r\n        yield put({type: \"SUCCESS_SET_LIKE\", payload: action.payload});\r\n        console.log(data.data);\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\nfunction* getUsersAsync(action) {\r\n    try {\r\n        console.log(\"Generator started: \" + action.payload);\r\n        yield put(inProgress());\r\n        const data = yield call(axios.get, 'http://localhost:8181/userList/' + action.payload );\r\n        yield put(success());\r\n        yield put({type: \"SUCCESS_USERS_GET\", payload: data.data});\r\n        console.log(data.data);\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\nfunction* createUserAsync(action) {\r\n    try {\r\n        yield put(inProgress());\r\n        const data = yield call(axios.post, 'http://localhost:8181/user/edit', JSON.stringify(action.payload), {\r\n            headers: {'Content-Type':'application/json'}\r\n        });\r\n        yield put(success());\r\n        console.log(data.data)\r\n        if(action.userId != null) {\r\n            yield put({type: 'SUCCESS_USER_CREATING', payload: data.data});\r\n        } else {\r\n            yield put({type: 'SUCCESS_USER_EDITING', payload: data.data});\r\n        }\r\n    } catch(error) {\r\n        yield put(apiError(error))\r\n    }\r\n}\r\n\r\nfunction* removeUserAsync(action) {\r\n    try {\r\n        yield put(inProgress());\r\n        yield call(axios.delete, 'http://localhost:8181/user/delete/' + action.payload );\r\n        yield put(success());\r\n        yield put({type: \"SUCCESS_USER_DELETED\", payload: action.payload});\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport rootReducer from \"./redux/reducers\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {\r\n  loginUser,\r\n  getMessages,\r\n  editMessage,\r\n  addMessage,\r\n  deleteMessage,\r\n  setLike,\r\n  getUsers,\r\n  addUser,\r\n  removeUser,\r\n  editUser\r\n} from \"./redux/generators/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composedEnhancers = composeWithDevTools(applyMiddleware(sagaMiddleware));\r\nconst initialState = {\r\n  messages: [],\r\n  users: [],\r\n  messagesLength: 0,\r\n  currentUser: {\r\n    userName: \"\",\r\n    password: \"\",\r\n    userId: \"\",\r\n    avatar: null,\r\n    isAdmin: false,\r\n    isLoggedIn: false\r\n  },\r\n  isLoading: false,\r\n  error: \"\",\r\n  editMessage: {}\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composedEnhancers\r\n);\r\n\r\nsagaMiddleware.run(loginUser);\r\nsagaMiddleware.run(getMessages);\r\nsagaMiddleware.run(editMessage);\r\nsagaMiddleware.run(addMessage);\r\nsagaMiddleware.run(deleteMessage);\r\nsagaMiddleware.run(setLike);\r\nsagaMiddleware.run(getUsers)\r\nsagaMiddleware.run(addUser);\r\nsagaMiddleware.run(removeUser);\r\nsagaMiddleware.run(editUser);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Toolbar, Badge } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport {addMessage, dropUser, editMessage} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst IconsStyle = {\r\n    marginLeft: \"30px\"\r\n}\r\n\r\nconst lastActivityStyle = {\r\n    width: \"70%\",\r\n    textAlign: \"right\"\r\n}\r\n\r\nconst linkStyle = {\r\n    color: \"white\",\r\n    margin: \"5px\"\r\n}\r\n\r\nfunction latestFinder(messages) {\r\n    let temp;\r\n    for(let i = 1; i < messages.length; i++) {\r\n        if(Date.parse(messages[i-1].createdAt) >  Date.parse(messages[i].createdAt)) {\r\n            console.log(Date.parse(messages[i-1].createdAt))\r\n            temp = messages[i-1].createdAt;\r\n        }\r\n    }\r\n    return temp;\r\n}\r\n\r\nconst Header = (props) => {\r\n    let numberOfMessages = props.messages.length;\r\n    let participants = Array.from(new Set(props.messages && props.messages.map((item) => item.userId))).length;\r\n    let lastMessageIn = latestFinder(props.messages)\r\n\r\n    const logout = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                <Typography>\r\n                    <Badge badgeContent={numberOfMessages} color=\"secondary\" style={IconsStyle}>\r\n                        <MailIcon />\r\n                    </Badge>\r\n                    <Badge badgeContent={participants} color=\"secondary\" style={IconsStyle}>\r\n                        <PeopleIcon />\r\n                    </Badge>\r\n                </Typography>\r\n                <Typography align=\"right\" variant=\"h6\" style={IconsStyle}><Link style={linkStyle} to=\"/chat\">   Bsa Chat!  </Link></Typography>\r\n                { props.currentUser.isAdmin ? <Link style={linkStyle} to=\"/users\">Admin tool</Link> : null }\r\n                { props.currentUser.isLoggedIn ? <Link style={linkStyle} to=\"/login\" onClick={logout}>Logout</Link> : null}\r\n                <div style={lastActivityStyle}>\r\n                    { props.currentUser.isLoggedIn && <Typography align=\"right\" variant=\"h6\" style={IconsStyle}>   latest: {moment(lastMessageIn).calendar()} </Typography>}\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\n\r\nconst mapDispatchToProps = {\r\n    dropUserProps: dropUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {addMessage, editMessage} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst InputStyle = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\"\r\n}\r\n\r\nconst InputFieldStyle = {\r\n    width: \"60%\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n}\r\n\r\nconst SendButton = {\r\n    marginLeft: \"10px\"\r\n}\r\n\r\nfunction createUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n       var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n       return v.toString(16);\r\n    });\r\n }\r\n\r\nconst MessageInput = ({\r\n    addMessageHandler,\r\n    currentPropsUser,\r\n    messageToEdit = null,\r\n    editMessageHandler,\r\n}) => {\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const fullMessageObject = {\r\n        ...currentPropsUser,\r\n        \"id\": 0,\r\n        \"text\": \"\",\r\n        \"createdAt\": new Date().toISOString(),\r\n        \"editedAt\": \"\"\r\n    }\r\n\r\n    const newMessage = {\r\n        ...fullMessageObject,\r\n        text: message,\r\n        id: createUUID()\r\n    }\r\n\r\n    const editMessage = () => {\r\n        editMessageHandler({\r\n            ...fullMessageObject,\r\n            text: message\r\n        });\r\n        setMessage(null);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div style={InputStyle}>\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                name=\"message\"\r\n                label=\"New message: \"\r\n                helperText=\"Write your message here\"\r\n                value={message}\r\n                variant=\"outlined\"\r\n                style={InputFieldStyle}\r\n                onChange={handleChange}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={SendButton}\r\n                onClick={() => {addMessageHandler(newMessage); setMessage(\"\")}}\r\n                >\r\n                {\"Send\"}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPropsUser: state.currentUser,\r\n    isEditMode: state.isEditMode\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addMessageHandler: addMessage,\r\n    editMessage: editMessage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInput);\r\n","import React, {useState} from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {editMessage, toggleEditWindow} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction EditModal({message, propsEditMessage, closeModal}) {\r\n\r\n  const [value, setValue] = useState(message.text);\r\n  console.log(value);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n    const modalStyles = {\r\n        marginTop: \"100px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n\r\n    const textDivStyle = {\r\n        background: \"white\",\r\n        padding: \"10px\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"8px\"\r\n    }\r\n\r\n    const textFieldStyle = {\r\n\r\n    }\r\n\r\n    const buttonStyle = {\r\n        marginLeft: \"10px\"\r\n    }\r\n\r\n  return (\r\n        <Modal open onClose={() => closeModal({})} style={modalStyles}>\r\n          <div style={textDivStyle}>\r\n            <TextField\r\n              // id=\"outlined-multiline-flexible\"\r\n              // label=\"Edit message\"\r\n              multiline\r\n              value={value}\r\n              onChange={handleChange}\r\n              // variant=\"outlined\"\r\n            />\r\n            <Button style={buttonStyle}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              // style={SendButton}\r\n              onClick={() => {propsEditMessage(message, value); closeModal({})}}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  propsEditMessage: editMessage,\r\n  closeModal: toggleEditWindow\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.editMessage\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography, Card, Avatar, CardContent, IconButton } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport editModal from './EditModal';\r\nimport moment from 'moment';\r\n\r\nimport {addMessage, deleteMessage, editMessage, getMessages, setLike, toggleEditWindow} from \"../redux/actions\";\r\nimport EditModal from \"./EditModal\";\r\n\r\nconst CardsStyle = {\r\n    background: \"#f2ffff\",\r\n    width: \"60%\",\r\n    marginTop: \"10px\"\r\n}\r\n\r\nconst rightForCurrentUser = {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n}\r\n\r\nconst userAvatarAndNameStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-begin\",\r\n    marginBottom: \"10px\"\r\n}\r\n\r\nconst AvatarStyle = {\r\n    marginRight: \"10px\"\r\n}\r\n\r\nconst CardFooter = {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n}\r\n\r\nconst CardFotterChildStyle = {\r\n    flex: \"1\"\r\n}\r\n\r\n\r\nconst MessageList = ({\r\n                         messages,\r\n                         currentPropsUser,\r\n                         likeMessageHandler,\r\n                         hasEditWindow,\r\n                         deleteMessageHandler,\r\n                         toggleEdit\r\n}) => {\r\n\r\n    let sortedMessages = messages.sort((a, b) => {\r\n        if(Date.parse(a.createdAt) > Date.parse(b.createdAt)) {\r\n            return 1;\r\n        }\r\n        if(a.createdAt < b.createdAt) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    } );\r\n\r\n\r\n    return(\r\n        <Container>\r\n            <div className=\"MessageList\">\r\n                {\r\n                    sortedMessages.map((ms, i) => {\r\n                        const isCurrentUser = currentPropsUser.userId === ms.userId;\r\n                        const divForCard = isCurrentUser ? rightForCurrentUser : null;\r\n                        return(\r\n\r\n                            <div style={divForCard} >\r\n                                <Card style={CardsStyle}>\r\n                                    <CardContent>\r\n                                        <div style={userAvatarAndNameStyle}>\r\n                                            {\r\n                                                !isCurrentUser && (\r\n                                                <Avatar src={ms.avatar} style={AvatarStyle}/>\r\n                                                )\r\n                                            }\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                { ms.user || ms.userName }\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                            {ms.text}\r\n                                        </Typography>\r\n                                        <div style={CardFooter}>\r\n                                            <div style={CardFotterChildStyle} >\r\n                                                {\r\n                                                    !isCurrentUser && (\r\n                                                        <IconButton onClick={() => likeMessageHandler(ms.id)} >\r\n                                                            <FavoriteIcon color={ms.isLike ? \"secondary\" : \"action\"} />\r\n                                                        </IconButton>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    isCurrentUser && (\r\n                                                        <IconButton onClick={() => deleteMessageHandler(ms.id)}>\r\n                                                            <DeleteIcon  />\r\n                                                        </IconButton>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    isCurrentUser && (\r\n                                                        <Link  to={`/message/${ms.id}`} >\r\n                                                            <IconButton>\r\n                                                                <CreateIcon/>\r\n                                                            </IconButton>\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                            <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" style={CardFotterChildStyle}>\r\n                                                {moment(ms.createdAt).format(\"LLLL\")}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n          {hasEditWindow && <EditModal />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPropsUser: state.currentUser,\r\n    messages: state.messages,\r\n    hasEditWindow: Boolean(state.editMessage.id)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    toggleEdit: toggleEditWindow,\r\n    addMessage: addMessage,\r\n    deleteMessageHandler: deleteMessage,\r\n    likeMessageHandler: setLike\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);\r\n","import React, { Component, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMessages } from '../redux/actions';\r\nimport Messages from \"../data/Messages\";\r\nimport Header from '../components/Header';\r\nimport MessageInput from '../components/MessageInput';\r\nimport MessageList from '../components/MessageList';\r\nimport Container from '@material-ui/core/Container';\r\nimport { CircularProgress, FormHelperText } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ContainerStyle = {\r\n  maxHeight: \"100%\",\r\n  marginTop: \"63px\"\r\n}\r\n\r\nconst spinnerStyle = {\r\n  display: \"flex\",\r\n  background: \"rgba(0, 0, 0, .1)\",\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  position: \"fixed\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\"\r\n}\r\n\r\nconst inputMessageStyle = {\r\n  width: \"100%\",\r\n  background: \"#ffffff\",\r\n  boxShadow: \"0 0 5px rgba(0,0,0,0.3)\"\r\n}\r\n\r\nfunction removeFromArr(array, id) {\r\n  let tempArr = [];\r\n  for(let i = 0; i < array.length; i++) {\r\n    if(i !== id) {\r\n      tempArr.push(array[i]);\r\n    }\r\n  }\r\n\r\n  return tempArr;\r\n}\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      messagesLength: 0,\r\n      currentUser: {\r\n        user: \"Andrew\",\r\n        userId: \"121314\",\r\n        avatar: null\r\n      },\r\n      messageToEditIndex: {},\r\n      isEditMode: false,\r\n      isLoading: true\r\n    };\r\n    this.receiveMessage = this.receiveMessage.bind(this);\r\n    this.likeMessage = this.likeMessage.bind(this);\r\n    this.deleteMessage = this.deleteMessage.bind(this);\r\n    this.editModeHander = this.editModeHander.bind(this);\r\n    this.editMessage = this.editMessage.bind(this);\r\n  }\r\n\r\n  receiveMessage(message) {\r\n    this.state.messages.push(message);\r\n    this.setState({messagesLength: this.state.messages.length})\r\n  }\r\n\r\n  likeMessage(id) {\r\n    const newArr = [...this.state.messages];\r\n    newArr[id].isLiked = !this.state.messages[id].isLiked;\r\n\r\n    this.setState({messages: newArr});\r\n  }\r\n\r\n  editModeHander(id) {\r\n    this.setState({\r\n      messageToEditIndex: id,\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  editMessage(newMessage) {\r\n    const {messages, messageToEditIndex} = this.state;\r\n\r\n    const newArr = [...messages];\r\n    newArr[messageToEditIndex] = newMessage;\r\n\r\n    this.setState({\r\n      messages: newArr,\r\n      messageToEditIndex: null,\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  deleteMessage(id) {\r\n    let tempArr = removeFromArr([...this.state.messages], id);\r\n\r\n    this.setState({messages: tempArr});\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getMessagesHandler, getUsers } = this.props;\r\n    getMessagesHandler(this.props.currentUser.userId);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading\r\n    } = this.state;\r\n    if(this.props.currentUser.isLoggedIn) {\r\n      return (\r\n          <div>\r\n            <Container style={ContainerStyle}>\r\n              <MessageList/>\r\n            </Container>\r\n\r\n            <div style={inputMessageStyle}>\r\n              <MessageInput style={inputMessageStyle}/>\r\n            </div>\r\n\r\n          </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <Redirect to=\"login\" />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...state\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  getMessagesHandler: getMessages\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, {Component, useEffect, useState} from 'react';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {addMessage, deleteMessage, dropUser, getMessages, loginUser, setLike, toggleEditWindow} from \"../redux/actions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst containerStyle = {\r\n    marginTop: \"100px\"\r\n}\r\n\r\nconst fieldsStyle  = {\r\n    margin: \"20px\"\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        password: '',\r\n        showPassword: false\r\n    })\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(props.isLoading) setIsLoading(true);\r\n\r\n        if(props.currentUser.isLoggedIn) {\r\n            setIsLoading(false);\r\n            props.currentUser.isAdmin ? history.push(\"/users\") : history.push(\"/chat\")\r\n        }\r\n    })\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUser({ ...user, [prop]: event.target.value });\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setUser({ ...user, showPassword: !user.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    const changePage = () => {\r\n        if(props.isLoading) {\r\n            return <div><CircularProgress /></div>\r\n        }\r\n\r\n        if(props.error != null) {\r\n            return <div>{props.error}</div>\r\n        }\r\n\r\n        if(props.currentUser != null) {\r\n            props.currentUser.isAdmin ? history.push('/users') : history.push('/chat');\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n        <Container style={containerStyle}>\r\n            <TextField\r\n                style={fieldsStyle}\r\n                id=\"outlined-helperText\"\r\n                name=\"message\"\r\n                label=\"Name: \"\r\n                value={user.name}\r\n                variant=\"outlined\"\r\n                //style={InputFieldStyle}\r\n                onChange={handleChange('name')}\r\n            />\r\n\r\n            <FormControl style={fieldsStyle} >\r\n                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type={user.showPassword ? 'text' : 'password'}\r\n                    value={user .password}\r\n                    onChange={handleChange('password')}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                            >\r\n                                {user.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n\r\n            {/* isLoading ? <CircularProgress /> : null */}\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //style={SendButton}  props.dispatch(dropUser());\r\n                onClick={() => {\r\n\r\n                    props.dispatch(loginUser(user.name, user.password));\r\n                }}>\r\n                {\"Send\"}\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nexport default connect(mapStateToProps, null)(LoginPage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {editMessage, getMessages, toggleEditWindow} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\nconst modalStyles = {\r\n    marginTop: \"300px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n}\r\n\r\nconst textDivStyle = {\r\n    background: \"white\",\r\n    padding: \"20px\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"8px\",\r\n    width: \"50%\",\r\n    height: \"50%\"\r\n}\r\n\r\nconst buttonStyle = {\r\n    margin: \"15px\"\r\n}\r\n\r\nconst EditMessagePage = ({ match, propsEditMessage, getMessages, messages, isLoggedIn }) => {\r\n    const { id } = match.params;\r\n    const [message, setMessage] = useState();\r\n    const [value, setValue] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(messages) {\r\n            setMessage(messages.find(m => m.id === id));\r\n        }\r\n\r\n        if(message && !value) {\r\n            setValue(message.text)\r\n        }\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    if(isLoggedIn) {\r\n        return (\r\n            <div style={modalStyles}>\r\n                <p style={buttonStyle}>Edit filed: </p>\r\n                <TextField style={textDivStyle}\r\n                           id=\"outlined-multiline-static\"\r\n                           multiline\r\n                           rows={8}\r\n                           value={value}\r\n                           onChange={handleChange}\r\n                           variant=\"outlined\"\r\n                />\r\n                <Button\r\n                    style={buttonStyle}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        propsEditMessage(message, value, history)\r\n                    }}\r\n                >\r\n                    Edit\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Redirect to=\"login\" />\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getMessages: getMessages,\r\n    propsEditMessage: editMessage\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.messages,\r\n    isLoggedIn: state.currentUser.isLoggedIn\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMessagePage);\r\n","import React, { useState } from 'react';\r\nimport {Container} from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst EditOrAddUser = (props) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        avatar: '',\r\n        password: '',\r\n        showPassword: false\r\n    })\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUser({ ...user, [prop]: event.target.value });\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setUser({ ...user, showPassword: !user.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return(\r\n        <Container>\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                name=\"message\"\r\n                label=\"Name: \"\r\n                value={user.name}\r\n                variant=\"outlined\"\r\n                //style={InputFieldStyle}\r\n                onChange={handleChange('name')}\r\n            />\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                name=\"message\"\r\n                label=\"Avatar url: \"\r\n                value={user.avatar}\r\n                variant=\"outlined\"\r\n                //style={InputFieldStyle}\r\n                onChange={handleChange('avatar')}\r\n            />\r\n\r\n            <FormControl >\r\n                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type={user.showPassword ? 'text' : 'password'}\r\n                    value={user .password}\r\n                    onChange={handleChange('password')}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                            >\r\n                                {user.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n\r\n            {/*<Button*/}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    color=\"primary\"*/}\r\n            {/*    //style={SendButton}*/}\r\n            {/*    onClick={() => addMessageHandler(newMessage)}*/}\r\n            {/*>*/}\r\n            {/*    {\"Send\"}*/}\r\n            {/*</Button>*/}\r\n            {/*<Button*/}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    color=\"disabled\"*/}\r\n            {/*    //style={SendButton}*/}\r\n            {/*    onClick={() => addMessageHandler(newMessage)}*/}\r\n            {/*>*/}\r\n            {/*    {\"Cancel\"}*/}\r\n            {/*</Button>*/}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EditOrAddUser;","import React, {useState, forwardRef} from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { getUsers, createUser, deleteUser, editUser } from '../redux/actions'\r\n\r\nconst tableStyles = {\r\n    marginTop: \"150px\"\r\n}\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst UsersList = (props) => {\r\n    if(props.currentUser.isAdmin) {\r\n        console.log(props.users);\r\n        return (\r\n            <MaterialTable\r\n                style={tableStyles}\r\n                title=\"Administrator tool: Users list\"\r\n                icons={tableIcons}\r\n                columns={[\r\n                    {\r\n                        title: 'Name', field: 'userName'//, validate: rowData => rowData.name !== '',\r\n                    },\r\n                    {\r\n                        title: 'Avatar', field: 'avatar'//, validate: rowData => rowData.avatar.length > 3\r\n                    },\r\n                    {\r\n                        title: 'isAdmin', field: 'isAdmin'\r\n                    },\r\n                    {\r\n                        title: 'password', field: 'password'\r\n                    }\r\n                ]}\r\n                data={props.users}\r\n                editable={{\r\n                    // onRowAdd: newData =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             setData([...data, newData]);\r\n                    //             resolve();\r\n                    //         }, 1000)\r\n                    //     }),\r\n                    // // onRowUpdate: (newData, oldData) =>\r\n                    // //     new Promise((resolve, reject) => {\r\n                    // //         setTimeout(() => {\r\n                    // //             const dataUpdate = [...data];\r\n                    // //             const index = oldData.tableData.id;\r\n                    // //             dataUpdate[index] = newData;\r\n                    // //             setData(dataUpdate);\r\n                    // //\r\n                    // //             resolve();\r\n                    // //         }, 1000)\r\n                    // //     }),\r\n                    isEditHidden: rowData => rowData.isAdmin === true,\r\n                    isDeleteHidden: rowData => rowData.isAdmin === true,\r\n                    onRowUpdate: newData => Promise.resolve(props.editUserProps(newData)),\r\n                    onRowAdd: newData => Promise.resolve(props.createUserProps(newData)),\r\n                    onRowDelete: oldData => Promise.resolve(props.deleteUserProps(oldData))\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nconst mapDispatchToProps = {\r\n    getUsersProps: getUsers,\r\n    editUserProps: editUser,\r\n    createUserProps: createUser,\r\n    deleteUserProps: deleteUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","import React, {useEffect} from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {getUsers} from \"../redux/actions\";\r\nimport UsersList from \"../components/UsersList\";\r\n\r\n\r\nconst AdminPage = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.users.length === 0) {\r\n            props.getUsersProps(props.currentUser.userId);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <UsersList />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nconst mapDispatchToProps = {\r\n    getUsersProps: getUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPage);","import React, { Component, useEffect } from 'react';\r\nimport {Provider} from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport store from \"./store\";\r\nimport Chat from './pages/Chat';\r\nimport LoginPage from './pages/Login';\r\nimport EditMessagePage from \"./pages/EditMessage\";\r\nimport UserEditOrAdd from \"./components/UserEditOrAdd\";\r\nimport UsersList from \"./components/UsersList\";\r\nimport Header from \"./components/Header\";\r\nimport AdminPage from \"./pages/AdminPage\";\r\n///>\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/chat\" component={Chat} />\r\n                        <Route path=\"/message/:id\" component={EditMessagePage} />\r\n                        <Route path=\"/login\" component={LoginPage} />\r\n                        <Route path=\"/user/edit\" component={UserEditOrAdd} />\r\n                        <Route path=\"/users\" component={AdminPage} />\r\n                    </Switch>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}